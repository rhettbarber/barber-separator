
function thigTheColors() {
		app.bringToFront();
			var docRef = app.activeDocument;
// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc228 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref113 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idChnl = charIDToTypeID( "Chnl" );
        var idCMYK = charIDToTypeID( "CMYK" );
        ref113.putEnumerated( idChnl, idChnl, idCMYK );
    desc228.putReference( idnull, ref113 );
executeAction( idslct, desc228, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc229 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref114 = new ActionReference();
        var idLyr = charIDToTypeID( "Lyr " );
        ref114.putName( idLyr, "REGISTRATION" );
    desc229.putReference( idnull, ref114 );
    var idMkVs = charIDToTypeID( "MkVs" );
    desc229.putBoolean( idMkVs, false );
executeAction( idslct, desc229, DialogModes.NO );

// =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc230 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref115 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idfsel = charIDToTypeID( "fsel" );
        ref115.putProperty( idChnl, idfsel );
    desc230.putReference( idnull, ref115 );
    var idT = charIDToTypeID( "T   " );
    var idOrdn = charIDToTypeID( "Ordn" );
    var idAl = charIDToTypeID( "Al  " );
    desc230.putEnumerated( idT, idOrdn, idAl );
executeAction( idsetd, desc230, DialogModes.NO );

// =======================================================
var idFl = charIDToTypeID( "Fl  " );
    var desc231 = new ActionDescriptor();
    var idUsng = charIDToTypeID( "Usng" );
    var idFlCn = charIDToTypeID( "FlCn" );
    var idWht = charIDToTypeID( "Wht " );
    desc231.putEnumerated( idUsng, idFlCn, idWht );
    var idOpct = charIDToTypeID( "Opct" );
    var idPrc = charIDToTypeID( "#Prc" );
    desc231.putUnitDouble( idOpct, idPrc, 100.000000 );
    var idMd = charIDToTypeID( "Md  " );
    var idBlnM = charIDToTypeID( "BlnM" );
    var idDrkn = charIDToTypeID( "Drkn" );
    desc231.putEnumerated( idMd, idBlnM, idDrkn );
executeAction( idFl, desc231, DialogModes.NO );

// =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc232 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref116 = new ActionReference();
        var idLyr = charIDToTypeID( "Lyr " );
        var idOrdn = charIDToTypeID( "Ordn" );
        var idTrgt = charIDToTypeID( "Trgt" );
        ref116.putEnumerated( idLyr, idOrdn, idTrgt );
    desc232.putReference( idnull, ref116 );
    var idT = charIDToTypeID( "T   " );
        var desc233 = new ActionDescriptor();
        var idMd = charIDToTypeID( "Md  " );
        var idBlnM = charIDToTypeID( "BlnM" );
        var idDrkn = charIDToTypeID( "Drkn" );
        desc233.putEnumerated( idMd, idBlnM, idDrkn );
    var idLyr = charIDToTypeID( "Lyr " );
    desc232.putObject( idT, idLyr, desc233 );
executeAction( idsetd, desc232, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc234 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref117 = new ActionReference();
        var idtypeCreateOrEditTool = stringIDToTypeID( "typeCreateOrEditTool" );
        ref117.putClass( idtypeCreateOrEditTool );
    desc234.putReference( idnull, ref117 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc234.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc234.putBoolean( idforceNotify, true );
executeAction( idslct, desc234, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc235 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref118 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idChnl = charIDToTypeID( "Chnl" );
        var idCyn = charIDToTypeID( "Cyn " );
        ref118.putEnumerated( idChnl, idChnl, idCyn );
    desc235.putReference( idnull, ref118 );
executeAction( idslct, desc235, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc236 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref119 = new ActionReference();
        var idmarqueeRectTool = stringIDToTypeID( "marqueeRectTool" );
        ref119.putClass( idmarqueeRectTool );
    desc236.putReference( idnull, ref119 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc236.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc236.putBoolean( idforceNotify, true );
executeAction( idslct, desc236, DialogModes.NO );

// =======================================================
var idMk = charIDToTypeID( "Mk  " );
    var desc237 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref120 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        ref120.putClass( idTxLr );
    desc237.putReference( idnull, ref120 );
    var idUsng = charIDToTypeID( "Usng" );
        var desc238 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc238.putString( idTxt, "CYAN-"  + app.activeDocument.name );
        var idwarp = stringIDToTypeID( "warp" );
            var desc239 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc239.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc239.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc239.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc239.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc239.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc238.putObject( idwarp, idwarp, desc239 );
        var idTxtC = charIDToTypeID( "TxtC" );
            var desc240 = new ActionDescriptor();
            var idHrzn = charIDToTypeID( "Hrzn" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc240.putUnitDouble( idHrzn, idPrc, 1.430143 );
            var idVrtc = charIDToTypeID( "Vrtc" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc240.putUnitDouble( idVrtc, idPrc, 0.806452 );
        var idPnt = charIDToTypeID( "Pnt " );
        desc238.putObject( idTxtC, idPnt, desc240 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc238.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc238.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );
        desc238.putEnumerated( idAntA, idAnnt, idantiAliasSharp );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list45 = new ActionList();
                var desc241 = new ActionDescriptor();
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idPnt = charIDToTypeID( "Pnt " );
                desc241.putEnumerated( idTEXT, idTEXT, idPnt );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc241.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc242 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc242.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc242.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc242.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc242.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc242.putDouble( idtx, 0.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc242.putDouble( idty, 0.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc241.putObject( idTrnf, idTrnf, desc242 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc241.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc241.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc241.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc241.putUnitDouble( idrowGutter, idPnt, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc241.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc241.putUnitDouble( idSpcn, idPnt, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc241.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc241.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );
                var idbase = stringIDToTypeID( "base" );
                    var desc243 = new ActionDescriptor();
                    var idHrzn = charIDToTypeID( "Hrzn" );
                    desc243.putDouble( idHrzn, 0.000000 );
                    var idVrtc = charIDToTypeID( "Vrtc" );
                    desc243.putDouble( idVrtc, 0.000000 );
                var idPnt = charIDToTypeID( "Pnt " );
                desc241.putObject( idbase, idPnt, desc243 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list45.putObject( idtextShape, desc241 );
        desc238.putList( idtextShape, list45 );
        var idTxtt = charIDToTypeID( "Txtt" );
            var list46 = new ActionList();
                var desc244 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc244.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc244.putInteger( idT, 12 );
                var idTxtS = charIDToTypeID( "TxtS" );
                    var desc245 = new ActionDescriptor();
                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                    desc245.putString( idfontPostScriptName, "MyriadPro-Regular" );
                    var idFntN = charIDToTypeID( "FntN" );
                    desc245.putString( idFntN, "Myriad Pro" );
                    var idFntS = charIDToTypeID( "FntS" );
                    desc245.putString( idFntS, "Regular" );
                    var idScrp = charIDToTypeID( "Scrp" );
                    desc245.putInteger( idScrp, 0 );
                    var idFntT = charIDToTypeID( "FntT" );
                    desc245.putInteger( idFntT, 0 );
                    var idSz = charIDToTypeID( "Sz  " );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc245.putUnitDouble( idSz, idPnt, 7.999999 );
                    var idHrzS = charIDToTypeID( "HrzS" );
                    desc245.putDouble( idHrzS, 100.000000 );
                    var idVrtS = charIDToTypeID( "VrtS" );
                    desc245.putDouble( idVrtS, 100.000000 );
                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                    desc245.putBoolean( idsyntheticBold, false );
                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                    desc245.putBoolean( idsyntheticItalic, false );
                    var idautoLeading = stringIDToTypeID( "autoLeading" );
                    desc245.putBoolean( idautoLeading, true );
                    var idTrck = charIDToTypeID( "Trck" );
                    desc245.putInteger( idTrck, 0 );
                    var idBsln = charIDToTypeID( "Bsln" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc245.putUnitDouble( idBsln, idPnt, 0.000000 );
                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                    desc245.putDouble( idcharacterRotation, 0.000000 );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idmanual = stringIDToTypeID( "manual" );
                    desc245.putEnumerated( idAtKr, idAtKr, idmanual );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc245.putEnumerated( idfontCaps, idfontCaps, idNrml );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc245.putEnumerated( idbaseline, idbaseline, idNrml );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc245.putEnumerated( idotbaseline, idotbaseline, idNrml );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                    desc245.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idunderlineOff = stringIDToTypeID( "underlineOff" );
                    desc245.putEnumerated( idUndl, idUndl, idunderlineOff );
                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc245.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                    var idligature = stringIDToTypeID( "ligature" );
                    desc245.putBoolean( idligature, true );
                    var idaltligature = stringIDToTypeID( "altligature" );
                    desc245.putBoolean( idaltligature, false );
                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                    desc245.putBoolean( idcontextualLigatures, true );
                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                    desc245.putBoolean( idalternateLigatures, false );
                    var idoldStyle = stringIDToTypeID( "oldStyle" );
                    desc245.putBoolean( idoldStyle, false );
                    var idfractions = stringIDToTypeID( "fractions" );
                    desc245.putBoolean( idfractions, false );
                    var idordinals = stringIDToTypeID( "ordinals" );
                    desc245.putBoolean( idordinals, false );
                    var idswash = stringIDToTypeID( "swash" );
                    desc245.putBoolean( idswash, false );
                    var idtitling = stringIDToTypeID( "titling" );
                    desc245.putBoolean( idtitling, false );
                    var idconnectionForms = stringIDToTypeID( "connectionForms" );
                    desc245.putBoolean( idconnectionForms, true );
                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                    desc245.putBoolean( idstylisticAlternates, false );
                    var idornaments = stringIDToTypeID( "ornaments" );
                    desc245.putBoolean( idornaments, false );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc245.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                    desc245.putBoolean( idproportionalMetrics, false );
                    var idkana = stringIDToTypeID( "kana" );
                    desc245.putBoolean( idkana, false );
                    var iditalics = stringIDToTypeID( "italics" );
                    desc245.putBoolean( iditalics, false );
                    var idruby = stringIDToTypeID( "ruby" );
                    desc245.putBoolean( idruby, false );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idwithStream = stringIDToTypeID( "withStream" );
                    desc245.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                    desc245.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var iddefaultForm = stringIDToTypeID( "defaultForm" );
                    desc245.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                    var idmojiZume = stringIDToTypeID( "mojiZume" );
                    desc245.putDouble( idmojiZume, 0.000000 );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idroman = stringIDToTypeID( "roman" );
                    desc245.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                    desc245.putBoolean( idenableWariChu, false );
                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                    desc245.putInteger( idwariChuCount, 2 );
                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                    desc245.putInteger( idwariChuLineGap, 0 );
                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                    desc245.putDouble( idwariChuScale, 0.500000 );
                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                    desc245.putInteger( idwariChuWidow, 2 );
                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                    desc245.putInteger( idwariChuOrphan, 2 );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                    desc245.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                    desc245.putInteger( idtcyUpDown, 0 );
                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                    desc245.putInteger( idtcyLeftRight, 0 );
                    var idleftAki = stringIDToTypeID( "leftAki" );
                    desc245.putDouble( idleftAki, -1.000000 );
                    var idrightAki = stringIDToTypeID( "rightAki" );
                    desc245.putDouble( idrightAki, -1.000000 );
                    var idjiDori = stringIDToTypeID( "jiDori" );
                    desc245.putInteger( idjiDori, 0 );
                    var idnoBreak = stringIDToTypeID( "noBreak" );
                    desc245.putBoolean( idnoBreak, false );
                    var idClr = charIDToTypeID( "Clr " );
                        var desc246 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc246.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc245.putObject( idClr, idGrsc, desc246 );
                    var idstrokeColor = stringIDToTypeID( "strokeColor" );
                        var desc247 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc247.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc245.putObject( idstrokeColor, idGrsc, desc247 );
                    var idFl = charIDToTypeID( "Fl  " );
                    desc245.putBoolean( idFl, true );
                    var idStrk = charIDToTypeID( "Strk" );
                    desc245.putBoolean( idStrk, false );
                    var idfillFirst = stringIDToTypeID( "fillFirst" );
                    desc245.putBoolean( idfillFirst, false );
                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                    desc245.putBoolean( idfillOverPrint, false );
                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                    desc245.putBoolean( idstrokeOverPrint, false );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idbuttCap = stringIDToTypeID( "buttCap" );
                    desc245.putEnumerated( idlineCap, idlineCap, idbuttCap );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idmiterJoin = stringIDToTypeID( "miterJoin" );
                    desc245.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                    var idlineWidth = stringIDToTypeID( "lineWidth" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc245.putUnitDouble( idlineWidth, idPnt, 0.010000 );
                    var idmiterLimit = stringIDToTypeID( "miterLimit" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc245.putUnitDouble( idmiterLimit, idPnt, 0.010000 );
                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                    desc245.putDouble( idlineDashoffset, 0.000000 );
                var idTxtS = charIDToTypeID( "TxtS" );
                desc244.putObject( idTxtS, idTxtS, desc245 );
            var idTxtt = charIDToTypeID( "Txtt" );
            list46.putObject( idTxtt, desc244 );
        desc238.putList( idTxtt, list46 );
        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            var list47 = new ActionList();
                var desc248 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc248.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc248.putInteger( idT, 12 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                    var desc249 = new ActionDescriptor();
                    var idAlgn = charIDToTypeID( "Algn" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idLeft = charIDToTypeID( "Left" );
                    desc249.putEnumerated( idAlgn, idAlg, idLeft );
                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc249.putUnitDouble( idfirstLineIndent, idPnt, 0.000000 );
                    var idstartIndent = stringIDToTypeID( "startIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc249.putUnitDouble( idstartIndent, idPnt, 0.000000 );
                    var idendIndent = stringIDToTypeID( "endIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc249.putUnitDouble( idendIndent, idPnt, 0.000000 );
                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc249.putUnitDouble( idspaceBefore, idPnt, 0.000000 );
                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc249.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                    desc249.putInteger( iddropCapMultiplier, 1 );
                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                    desc249.putDouble( idautoLeadingPercentage, 1.200000 );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                    desc249.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                    var idhyphenate = stringIDToTypeID( "hyphenate" );
                    desc249.putBoolean( idhyphenate, true );
                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                    desc249.putInteger( idhyphenateWordSize, 6 );
                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                    desc249.putInteger( idhyphenatePreLength, 2 );
                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                    desc249.putInteger( idhyphenatePostLength, 2 );
                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                    desc249.putInteger( idhyphenateLimit, 0 );
                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                    desc249.putDouble( idhyphenationZone, 36.000000 );
                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                    desc249.putBoolean( idhyphenateCapitalized, true );
                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                    desc249.putDouble( idhyphenationPreference, 0.500000 );
                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                    desc249.putDouble( idjustificationWordMinimum, 0.800000 );
                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                    desc249.putDouble( idjustificationWordDesired, 1.000000 );
                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                    desc249.putDouble( idjustificationWordMaximum, 1.330000 );
                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                    desc249.putDouble( idjustificationLetterMinimum, 0.000000 );
                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                    desc249.putDouble( idjustificationLetterDesired, 0.000000 );
                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                    desc249.putDouble( idjustificationLetterMaximum, 0.000000 );
                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                    desc249.putDouble( idjustificationGlyphMinimum, 1.000000 );
                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                    desc249.putDouble( idjustificationGlyphDesired, 1.000000 );
                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                    desc249.putDouble( idjustificationGlyphMaximum, 1.000000 );
                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idJstA = charIDToTypeID( "JstA" );
                    desc249.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                    desc249.putBoolean( idhangingRoman, false );
                    var idautoTCY = stringIDToTypeID( "autoTCY" );
                    desc249.putInteger( idautoTCY, 1 );
                    var idkeepTogether = stringIDToTypeID( "keepTogether" );
                    desc249.putBoolean( idkeepTogether, true );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                    desc249.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpushIn = stringIDToTypeID( "pushIn" );
                    desc249.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                    desc249.putBoolean( idkurikaeshiMojiShori, false );
                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                    desc249.putBoolean( idtextEveryLineComposer, false );
                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                    desc249.putDouble( iddefaultTabWidth, 36.000000 );
                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                        var desc250 = new ActionDescriptor();
                        var idClr = charIDToTypeID( "Clr " );
                            var desc251 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc251.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc250.putObject( idClr, idGrsc, desc251 );
                        var idstrokeColor = stringIDToTypeID( "strokeColor" );
                            var desc252 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc252.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc250.putObject( idstrokeColor, idGrsc, desc252 );
                        var idFl = charIDToTypeID( "Fl  " );
                        desc250.putBoolean( idFl, true );
                        var idStrk = charIDToTypeID( "Strk" );
                        desc250.putBoolean( idStrk, false );
                    var idTxtS = charIDToTypeID( "TxtS" );
                    desc249.putObject( iddefaultStyle, idTxtS, desc250 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                desc248.putObject( idparagraphStyle, idparagraphStyle, desc249 );
            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            list47.putObject( idparagraphStyleRange, desc248 );
        desc238.putList( idparagraphStyleRange, list47 );
        var idkerningRange = stringIDToTypeID( "kerningRange" );
            var list48 = new ActionList();
        desc238.putList( idkerningRange, list48 );
    var idTxLr = charIDToTypeID( "TxLr" );
    desc237.putObject( idUsng, idTxLr, desc238 );
executeAction( idMk, desc237, DialogModes.NO );

// =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc253 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref121 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idfsel = charIDToTypeID( "fsel" );
        ref121.putProperty( idChnl, idfsel );
    desc253.putReference( idnull, ref121 );
    var idT = charIDToTypeID( "T   " );
    var idOrdn = charIDToTypeID( "Ordn" );
    var idNone = charIDToTypeID( "None" );
    desc253.putEnumerated( idT, idOrdn, idNone );
executeAction( idsetd, desc253, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc254 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref122 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idChnl = charIDToTypeID( "Chnl" );
        var idMgnt = charIDToTypeID( "Mgnt" );
        ref122.putEnumerated( idChnl, idChnl, idMgnt );
    desc254.putReference( idnull, ref122 );
executeAction( idslct, desc254, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc255 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref123 = new ActionReference();
        var idtypeCreateOrEditTool = stringIDToTypeID( "typeCreateOrEditTool" );
        ref123.putClass( idtypeCreateOrEditTool );
    desc255.putReference( idnull, ref123 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc255.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc255.putBoolean( idforceNotify, true );
executeAction( idslct, desc255, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc256 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref124 = new ActionReference();
        var idmarqueeRectTool = stringIDToTypeID( "marqueeRectTool" );
        ref124.putClass( idmarqueeRectTool );
    desc256.putReference( idnull, ref124 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc256.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc256.putBoolean( idforceNotify, true );
executeAction( idslct, desc256, DialogModes.NO );

// =======================================================
var idMk = charIDToTypeID( "Mk  " );
    var desc257 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref125 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        ref125.putClass( idTxLr );
    desc257.putReference( idnull, ref125 );
    var idUsng = charIDToTypeID( "Usng" );
        var desc258 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc258.putString( idTxt, "MAGENTA -"  + app.activeDocument.name );
        var idwarp = stringIDToTypeID( "warp" );
            var desc259 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc259.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc259.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc259.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc259.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc259.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc258.putObject( idwarp, idwarp, desc259 );
        var idTxtC = charIDToTypeID( "TxtC" );
            var desc260 = new ActionDescriptor();
            var idHrzn = charIDToTypeID( "Hrzn" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc260.putUnitDouble( idHrzn, idPrc, 1.540154 );
            var idVrtc = charIDToTypeID( "Vrtc" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc260.putUnitDouble( idVrtc, idPrc, 0.806452 );
        var idPnt = charIDToTypeID( "Pnt " );
        desc258.putObject( idTxtC, idPnt, desc260 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc258.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc258.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );
        desc258.putEnumerated( idAntA, idAnnt, idantiAliasSharp );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list49 = new ActionList();
                var desc261 = new ActionDescriptor();
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idPnt = charIDToTypeID( "Pnt " );
                desc261.putEnumerated( idTEXT, idTEXT, idPnt );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc261.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc262 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc262.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc262.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc262.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc262.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc262.putDouble( idtx, 0.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc262.putDouble( idty, 0.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc261.putObject( idTrnf, idTrnf, desc262 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc261.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc261.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc261.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc261.putUnitDouble( idrowGutter, idPnt, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc261.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc261.putUnitDouble( idSpcn, idPnt, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc261.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc261.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );
                var idbase = stringIDToTypeID( "base" );
                    var desc263 = new ActionDescriptor();
                    var idHrzn = charIDToTypeID( "Hrzn" );
                    desc263.putDouble( idHrzn, 0.000000 );
                    var idVrtc = charIDToTypeID( "Vrtc" );
                    desc263.putDouble( idVrtc, 0.000000 );
                var idPnt = charIDToTypeID( "Pnt " );
                desc261.putObject( idbase, idPnt, desc263 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list49.putObject( idtextShape, desc261 );
        desc258.putList( idtextShape, list49 );
        var idTxtt = charIDToTypeID( "Txtt" );
            var list50 = new ActionList();
                var desc264 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc264.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc264.putInteger( idT, 17 );
                var idTxtS = charIDToTypeID( "TxtS" );
                    var desc265 = new ActionDescriptor();
                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                    desc265.putString( idfontPostScriptName, "MyriadPro-Regular" );
                    var idFntN = charIDToTypeID( "FntN" );
                    desc265.putString( idFntN, "Myriad Pro" );
                    var idFntS = charIDToTypeID( "FntS" );
                    desc265.putString( idFntS, "Regular" );
                    var idScrp = charIDToTypeID( "Scrp" );
                    desc265.putInteger( idScrp, 0 );
                    var idFntT = charIDToTypeID( "FntT" );
                    desc265.putInteger( idFntT, 0 );
                    var idSz = charIDToTypeID( "Sz  " );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc265.putUnitDouble( idSz, idPnt, 7.999999 );
                    var idHrzS = charIDToTypeID( "HrzS" );
                    desc265.putDouble( idHrzS, 100.000000 );
                    var idVrtS = charIDToTypeID( "VrtS" );
                    desc265.putDouble( idVrtS, 100.000000 );
                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                    desc265.putBoolean( idsyntheticBold, false );
                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                    desc265.putBoolean( idsyntheticItalic, false );
                    var idautoLeading = stringIDToTypeID( "autoLeading" );
                    desc265.putBoolean( idautoLeading, true );
                    var idTrck = charIDToTypeID( "Trck" );
                    desc265.putInteger( idTrck, 0 );
                    var idBsln = charIDToTypeID( "Bsln" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc265.putUnitDouble( idBsln, idPnt, 0.000000 );
                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                    desc265.putDouble( idcharacterRotation, 0.000000 );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idmanual = stringIDToTypeID( "manual" );
                    desc265.putEnumerated( idAtKr, idAtKr, idmanual );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc265.putEnumerated( idfontCaps, idfontCaps, idNrml );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc265.putEnumerated( idbaseline, idbaseline, idNrml );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc265.putEnumerated( idotbaseline, idotbaseline, idNrml );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                    desc265.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idunderlineOff = stringIDToTypeID( "underlineOff" );
                    desc265.putEnumerated( idUndl, idUndl, idunderlineOff );
                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc265.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                    var idligature = stringIDToTypeID( "ligature" );
                    desc265.putBoolean( idligature, true );
                    var idaltligature = stringIDToTypeID( "altligature" );
                    desc265.putBoolean( idaltligature, false );
                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                    desc265.putBoolean( idcontextualLigatures, true );
                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                    desc265.putBoolean( idalternateLigatures, false );
                    var idoldStyle = stringIDToTypeID( "oldStyle" );
                    desc265.putBoolean( idoldStyle, false );
                    var idfractions = stringIDToTypeID( "fractions" );
                    desc265.putBoolean( idfractions, false );
                    var idordinals = stringIDToTypeID( "ordinals" );
                    desc265.putBoolean( idordinals, false );
                    var idswash = stringIDToTypeID( "swash" );
                    desc265.putBoolean( idswash, false );
                    var idtitling = stringIDToTypeID( "titling" );
                    desc265.putBoolean( idtitling, false );
                    var idconnectionForms = stringIDToTypeID( "connectionForms" );
                    desc265.putBoolean( idconnectionForms, true );
                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                    desc265.putBoolean( idstylisticAlternates, false );
                    var idornaments = stringIDToTypeID( "ornaments" );
                    desc265.putBoolean( idornaments, false );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc265.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                    desc265.putBoolean( idproportionalMetrics, false );
                    var idkana = stringIDToTypeID( "kana" );
                    desc265.putBoolean( idkana, false );
                    var iditalics = stringIDToTypeID( "italics" );
                    desc265.putBoolean( iditalics, false );
                    var idruby = stringIDToTypeID( "ruby" );
                    desc265.putBoolean( idruby, false );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idwithStream = stringIDToTypeID( "withStream" );
                    desc265.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                    desc265.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var iddefaultForm = stringIDToTypeID( "defaultForm" );
                    desc265.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                    var idmojiZume = stringIDToTypeID( "mojiZume" );
                    desc265.putDouble( idmojiZume, 0.000000 );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idroman = stringIDToTypeID( "roman" );
                    desc265.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                    desc265.putBoolean( idenableWariChu, false );
                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                    desc265.putInteger( idwariChuCount, 2 );
                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                    desc265.putInteger( idwariChuLineGap, 0 );
                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                    desc265.putDouble( idwariChuScale, 0.500000 );
                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                    desc265.putInteger( idwariChuWidow, 2 );
                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                    desc265.putInteger( idwariChuOrphan, 2 );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                    desc265.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                    desc265.putInteger( idtcyUpDown, 0 );
                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                    desc265.putInteger( idtcyLeftRight, 0 );
                    var idleftAki = stringIDToTypeID( "leftAki" );
                    desc265.putDouble( idleftAki, -1.000000 );
                    var idrightAki = stringIDToTypeID( "rightAki" );
                    desc265.putDouble( idrightAki, -1.000000 );
                    var idjiDori = stringIDToTypeID( "jiDori" );
                    desc265.putInteger( idjiDori, 0 );
                    var idnoBreak = stringIDToTypeID( "noBreak" );
                    desc265.putBoolean( idnoBreak, false );
                    var idClr = charIDToTypeID( "Clr " );
                        var desc266 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc266.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc265.putObject( idClr, idGrsc, desc266 );
                    var idstrokeColor = stringIDToTypeID( "strokeColor" );
                        var desc267 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc267.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc265.putObject( idstrokeColor, idGrsc, desc267 );
                    var idFl = charIDToTypeID( "Fl  " );
                    desc265.putBoolean( idFl, true );
                    var idStrk = charIDToTypeID( "Strk" );
                    desc265.putBoolean( idStrk, false );
                    var idfillFirst = stringIDToTypeID( "fillFirst" );
                    desc265.putBoolean( idfillFirst, false );
                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                    desc265.putBoolean( idfillOverPrint, false );
                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                    desc265.putBoolean( idstrokeOverPrint, false );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idbuttCap = stringIDToTypeID( "buttCap" );
                    desc265.putEnumerated( idlineCap, idlineCap, idbuttCap );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idmiterJoin = stringIDToTypeID( "miterJoin" );
                    desc265.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                    var idlineWidth = stringIDToTypeID( "lineWidth" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc265.putUnitDouble( idlineWidth, idPnt, 0.010000 );
                    var idmiterLimit = stringIDToTypeID( "miterLimit" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc265.putUnitDouble( idmiterLimit, idPnt, 0.010000 );
                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                    desc265.putDouble( idlineDashoffset, 0.000000 );
                var idTxtS = charIDToTypeID( "TxtS" );
                desc264.putObject( idTxtS, idTxtS, desc265 );
            var idTxtt = charIDToTypeID( "Txtt" );
            list50.putObject( idTxtt, desc264 );
        desc258.putList( idTxtt, list50 );
        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            var list51 = new ActionList();
                var desc268 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc268.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc268.putInteger( idT, 17 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                    var desc269 = new ActionDescriptor();
                    var idAlgn = charIDToTypeID( "Algn" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idLeft = charIDToTypeID( "Left" );
                    desc269.putEnumerated( idAlgn, idAlg, idLeft );
                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc269.putUnitDouble( idfirstLineIndent, idPnt, 0.000000 );
                    var idstartIndent = stringIDToTypeID( "startIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc269.putUnitDouble( idstartIndent, idPnt, 0.000000 );
                    var idendIndent = stringIDToTypeID( "endIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc269.putUnitDouble( idendIndent, idPnt, 0.000000 );
                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc269.putUnitDouble( idspaceBefore, idPnt, 0.000000 );
                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc269.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                    desc269.putInteger( iddropCapMultiplier, 1 );
                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                    desc269.putDouble( idautoLeadingPercentage, 1.200000 );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                    desc269.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                    var idhyphenate = stringIDToTypeID( "hyphenate" );
                    desc269.putBoolean( idhyphenate, true );
                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                    desc269.putInteger( idhyphenateWordSize, 6 );
                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                    desc269.putInteger( idhyphenatePreLength, 2 );
                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                    desc269.putInteger( idhyphenatePostLength, 2 );
                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                    desc269.putInteger( idhyphenateLimit, 0 );
                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                    desc269.putDouble( idhyphenationZone, 36.000000 );
                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                    desc269.putBoolean( idhyphenateCapitalized, true );
                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                    desc269.putDouble( idhyphenationPreference, 0.500000 );
                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                    desc269.putDouble( idjustificationWordMinimum, 0.800000 );
                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                    desc269.putDouble( idjustificationWordDesired, 1.000000 );
                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                    desc269.putDouble( idjustificationWordMaximum, 1.330000 );
                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                    desc269.putDouble( idjustificationLetterMinimum, 0.000000 );
                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                    desc269.putDouble( idjustificationLetterDesired, 0.000000 );
                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                    desc269.putDouble( idjustificationLetterMaximum, 0.000000 );
                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                    desc269.putDouble( idjustificationGlyphMinimum, 1.000000 );
                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                    desc269.putDouble( idjustificationGlyphDesired, 1.000000 );
                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                    desc269.putDouble( idjustificationGlyphMaximum, 1.000000 );
                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idJstA = charIDToTypeID( "JstA" );
                    desc269.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                    desc269.putBoolean( idhangingRoman, false );
                    var idautoTCY = stringIDToTypeID( "autoTCY" );
                    desc269.putInteger( idautoTCY, 1 );
                    var idkeepTogether = stringIDToTypeID( "keepTogether" );
                    desc269.putBoolean( idkeepTogether, true );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                    desc269.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpushIn = stringIDToTypeID( "pushIn" );
                    desc269.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                    desc269.putBoolean( idkurikaeshiMojiShori, false );
                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                    desc269.putBoolean( idtextEveryLineComposer, false );
                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                    desc269.putDouble( iddefaultTabWidth, 36.000000 );
                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                        var desc270 = new ActionDescriptor();
                        var idClr = charIDToTypeID( "Clr " );
                            var desc271 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc271.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc270.putObject( idClr, idGrsc, desc271 );
                        var idstrokeColor = stringIDToTypeID( "strokeColor" );
                            var desc272 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc272.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc270.putObject( idstrokeColor, idGrsc, desc272 );
                        var idFl = charIDToTypeID( "Fl  " );
                        desc270.putBoolean( idFl, true );
                        var idStrk = charIDToTypeID( "Strk" );
                        desc270.putBoolean( idStrk, false );
                    var idTxtS = charIDToTypeID( "TxtS" );
                    desc269.putObject( iddefaultStyle, idTxtS, desc270 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                desc268.putObject( idparagraphStyle, idparagraphStyle, desc269 );
            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            list51.putObject( idparagraphStyleRange, desc268 );
        desc258.putList( idparagraphStyleRange, list51 );
        var idkerningRange = stringIDToTypeID( "kerningRange" );
            var list52 = new ActionList();
        desc258.putList( idkerningRange, list52 );
    var idTxLr = charIDToTypeID( "TxLr" );
    desc257.putObject( idUsng, idTxLr, desc258 );
executeAction( idMk, desc257, DialogModes.NO );

// =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc273 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref126 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idfsel = charIDToTypeID( "fsel" );
        ref126.putProperty( idChnl, idfsel );
    desc273.putReference( idnull, ref126 );
    var idT = charIDToTypeID( "T   " );
    var idOrdn = charIDToTypeID( "Ordn" );
    var idNone = charIDToTypeID( "None" );
    desc273.putEnumerated( idT, idOrdn, idNone );
executeAction( idsetd, desc273, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc274 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref127 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idChnl = charIDToTypeID( "Chnl" );
        var idYllw = charIDToTypeID( "Yllw" );
        ref127.putEnumerated( idChnl, idChnl, idYllw );
    desc274.putReference( idnull, ref127 );
executeAction( idslct, desc274, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc275 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref128 = new ActionReference();
        var idtypeCreateOrEditTool = stringIDToTypeID( "typeCreateOrEditTool" );
        ref128.putClass( idtypeCreateOrEditTool );
    desc275.putReference( idnull, ref128 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc275.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc275.putBoolean( idforceNotify, true );
executeAction( idslct, desc275, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc276 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref129 = new ActionReference();
        var idmarqueeRectTool = stringIDToTypeID( "marqueeRectTool" );
        ref129.putClass( idmarqueeRectTool );
    desc276.putReference( idnull, ref129 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc276.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc276.putBoolean( idforceNotify, true );
executeAction( idslct, desc276, DialogModes.NO );

// =======================================================
var idMk = charIDToTypeID( "Mk  " );
    var desc277 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref130 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        ref130.putClass( idTxLr );
    desc277.putReference( idnull, ref130 );
    var idUsng = charIDToTypeID( "Usng" );
        var desc278 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc278.putString( idTxt, "YELLOW -"  + app.activeDocument.name );
        var idwarp = stringIDToTypeID( "warp" );
            var desc279 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc279.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc279.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc279.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc279.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc279.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc278.putObject( idwarp, idwarp, desc279 );
        var idTxtC = charIDToTypeID( "TxtC" );
            var desc280 = new ActionDescriptor();
            var idHrzn = charIDToTypeID( "Hrzn" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc280.putUnitDouble( idHrzn, idPrc, 1.650165 );
            var idVrtc = charIDToTypeID( "Vrtc" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc280.putUnitDouble( idVrtc, idPrc, 0.907258 );
        var idPnt = charIDToTypeID( "Pnt " );
        desc278.putObject( idTxtC, idPnt, desc280 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc278.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc278.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );
        desc278.putEnumerated( idAntA, idAnnt, idantiAliasSharp );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list53 = new ActionList();
                var desc281 = new ActionDescriptor();
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idPnt = charIDToTypeID( "Pnt " );
                desc281.putEnumerated( idTEXT, idTEXT, idPnt );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc281.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc282 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc282.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc282.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc282.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc282.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc282.putDouble( idtx, 0.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc282.putDouble( idty, 0.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc281.putObject( idTrnf, idTrnf, desc282 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc281.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc281.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc281.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc281.putUnitDouble( idrowGutter, idPnt, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc281.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc281.putUnitDouble( idSpcn, idPnt, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc281.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc281.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );
                var idbase = stringIDToTypeID( "base" );
                    var desc283 = new ActionDescriptor();
                    var idHrzn = charIDToTypeID( "Hrzn" );
                    desc283.putDouble( idHrzn, 0.000000 );
                    var idVrtc = charIDToTypeID( "Vrtc" );
                    desc283.putDouble( idVrtc, 0.000000 );
                var idPnt = charIDToTypeID( "Pnt " );
                desc281.putObject( idbase, idPnt, desc283 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list53.putObject( idtextShape, desc281 );
        desc278.putList( idtextShape, list53 );
        var idTxtt = charIDToTypeID( "Txtt" );
            var list54 = new ActionList();
                var desc284 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc284.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc284.putInteger( idT, 16 );
                var idTxtS = charIDToTypeID( "TxtS" );
                    var desc285 = new ActionDescriptor();
                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                    desc285.putString( idfontPostScriptName, "MyriadPro-Regular" );
                    var idFntN = charIDToTypeID( "FntN" );
                    desc285.putString( idFntN, "Myriad Pro" );
                    var idFntS = charIDToTypeID( "FntS" );
                    desc285.putString( idFntS, "Regular" );
                    var idScrp = charIDToTypeID( "Scrp" );
                    desc285.putInteger( idScrp, 0 );
                    var idFntT = charIDToTypeID( "FntT" );
                    desc285.putInteger( idFntT, 0 );
                    var idSz = charIDToTypeID( "Sz  " );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc285.putUnitDouble( idSz, idPnt, 7.999999 );
                    var idHrzS = charIDToTypeID( "HrzS" );
                    desc285.putDouble( idHrzS, 100.000000 );
                    var idVrtS = charIDToTypeID( "VrtS" );
                    desc285.putDouble( idVrtS, 100.000000 );
                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                    desc285.putBoolean( idsyntheticBold, false );
                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                    desc285.putBoolean( idsyntheticItalic, false );
                    var idautoLeading = stringIDToTypeID( "autoLeading" );
                    desc285.putBoolean( idautoLeading, true );
                    var idTrck = charIDToTypeID( "Trck" );
                    desc285.putInteger( idTrck, 0 );
                    var idBsln = charIDToTypeID( "Bsln" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc285.putUnitDouble( idBsln, idPnt, 0.000000 );
                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                    desc285.putDouble( idcharacterRotation, 0.000000 );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idmanual = stringIDToTypeID( "manual" );
                    desc285.putEnumerated( idAtKr, idAtKr, idmanual );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc285.putEnumerated( idfontCaps, idfontCaps, idNrml );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc285.putEnumerated( idbaseline, idbaseline, idNrml );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc285.putEnumerated( idotbaseline, idotbaseline, idNrml );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                    desc285.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idunderlineOff = stringIDToTypeID( "underlineOff" );
                    desc285.putEnumerated( idUndl, idUndl, idunderlineOff );
                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc285.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                    var idligature = stringIDToTypeID( "ligature" );
                    desc285.putBoolean( idligature, true );
                    var idaltligature = stringIDToTypeID( "altligature" );
                    desc285.putBoolean( idaltligature, false );
                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                    desc285.putBoolean( idcontextualLigatures, true );
                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                    desc285.putBoolean( idalternateLigatures, false );
                    var idoldStyle = stringIDToTypeID( "oldStyle" );
                    desc285.putBoolean( idoldStyle, false );
                    var idfractions = stringIDToTypeID( "fractions" );
                    desc285.putBoolean( idfractions, false );
                    var idordinals = stringIDToTypeID( "ordinals" );
                    desc285.putBoolean( idordinals, false );
                    var idswash = stringIDToTypeID( "swash" );
                    desc285.putBoolean( idswash, false );
                    var idtitling = stringIDToTypeID( "titling" );
                    desc285.putBoolean( idtitling, false );
                    var idconnectionForms = stringIDToTypeID( "connectionForms" );
                    desc285.putBoolean( idconnectionForms, true );
                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                    desc285.putBoolean( idstylisticAlternates, false );
                    var idornaments = stringIDToTypeID( "ornaments" );
                    desc285.putBoolean( idornaments, false );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc285.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                    desc285.putBoolean( idproportionalMetrics, false );
                    var idkana = stringIDToTypeID( "kana" );
                    desc285.putBoolean( idkana, false );
                    var iditalics = stringIDToTypeID( "italics" );
                    desc285.putBoolean( iditalics, false );
                    var idruby = stringIDToTypeID( "ruby" );
                    desc285.putBoolean( idruby, false );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idwithStream = stringIDToTypeID( "withStream" );
                    desc285.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                    desc285.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var iddefaultForm = stringIDToTypeID( "defaultForm" );
                    desc285.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                    var idmojiZume = stringIDToTypeID( "mojiZume" );
                    desc285.putDouble( idmojiZume, 0.000000 );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idroman = stringIDToTypeID( "roman" );
                    desc285.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                    desc285.putBoolean( idenableWariChu, false );
                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                    desc285.putInteger( idwariChuCount, 2 );
                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                    desc285.putInteger( idwariChuLineGap, 0 );
                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                    desc285.putDouble( idwariChuScale, 0.500000 );
                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                    desc285.putInteger( idwariChuWidow, 2 );
                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                    desc285.putInteger( idwariChuOrphan, 2 );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                    desc285.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                    desc285.putInteger( idtcyUpDown, 0 );
                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                    desc285.putInteger( idtcyLeftRight, 0 );
                    var idleftAki = stringIDToTypeID( "leftAki" );
                    desc285.putDouble( idleftAki, -1.000000 );
                    var idrightAki = stringIDToTypeID( "rightAki" );
                    desc285.putDouble( idrightAki, -1.000000 );
                    var idjiDori = stringIDToTypeID( "jiDori" );
                    desc285.putInteger( idjiDori, 0 );
                    var idnoBreak = stringIDToTypeID( "noBreak" );
                    desc285.putBoolean( idnoBreak, false );
                    var idClr = charIDToTypeID( "Clr " );
                        var desc286 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc286.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc285.putObject( idClr, idGrsc, desc286 );
                    var idstrokeColor = stringIDToTypeID( "strokeColor" );
                        var desc287 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc287.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc285.putObject( idstrokeColor, idGrsc, desc287 );
                    var idFl = charIDToTypeID( "Fl  " );
                    desc285.putBoolean( idFl, true );
                    var idStrk = charIDToTypeID( "Strk" );
                    desc285.putBoolean( idStrk, false );
                    var idfillFirst = stringIDToTypeID( "fillFirst" );
                    desc285.putBoolean( idfillFirst, false );
                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                    desc285.putBoolean( idfillOverPrint, false );
                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                    desc285.putBoolean( idstrokeOverPrint, false );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idbuttCap = stringIDToTypeID( "buttCap" );
                    desc285.putEnumerated( idlineCap, idlineCap, idbuttCap );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idmiterJoin = stringIDToTypeID( "miterJoin" );
                    desc285.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                    var idlineWidth = stringIDToTypeID( "lineWidth" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc285.putUnitDouble( idlineWidth, idPnt, 0.010000 );
                    var idmiterLimit = stringIDToTypeID( "miterLimit" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc285.putUnitDouble( idmiterLimit, idPnt, 0.010000 );
                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                    desc285.putDouble( idlineDashoffset, 0.000000 );
                var idTxtS = charIDToTypeID( "TxtS" );
                desc284.putObject( idTxtS, idTxtS, desc285 );
            var idTxtt = charIDToTypeID( "Txtt" );
            list54.putObject( idTxtt, desc284 );
        desc278.putList( idTxtt, list54 );
        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            var list55 = new ActionList();
                var desc288 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc288.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc288.putInteger( idT, 16 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                    var desc289 = new ActionDescriptor();
                    var idAlgn = charIDToTypeID( "Algn" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idLeft = charIDToTypeID( "Left" );
                    desc289.putEnumerated( idAlgn, idAlg, idLeft );
                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc289.putUnitDouble( idfirstLineIndent, idPnt, 0.000000 );
                    var idstartIndent = stringIDToTypeID( "startIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc289.putUnitDouble( idstartIndent, idPnt, 0.000000 );
                    var idendIndent = stringIDToTypeID( "endIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc289.putUnitDouble( idendIndent, idPnt, 0.000000 );
                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc289.putUnitDouble( idspaceBefore, idPnt, 0.000000 );
                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc289.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                    desc289.putInteger( iddropCapMultiplier, 1 );
                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                    desc289.putDouble( idautoLeadingPercentage, 1.200000 );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                    desc289.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                    var idhyphenate = stringIDToTypeID( "hyphenate" );
                    desc289.putBoolean( idhyphenate, true );
                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                    desc289.putInteger( idhyphenateWordSize, 6 );
                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                    desc289.putInteger( idhyphenatePreLength, 2 );
                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                    desc289.putInteger( idhyphenatePostLength, 2 );
                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                    desc289.putInteger( idhyphenateLimit, 0 );
                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                    desc289.putDouble( idhyphenationZone, 36.000000 );
                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                    desc289.putBoolean( idhyphenateCapitalized, true );
                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                    desc289.putDouble( idhyphenationPreference, 0.500000 );
                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                    desc289.putDouble( idjustificationWordMinimum, 0.800000 );
                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                    desc289.putDouble( idjustificationWordDesired, 1.000000 );
                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                    desc289.putDouble( idjustificationWordMaximum, 1.330000 );
                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                    desc289.putDouble( idjustificationLetterMinimum, 0.000000 );
                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                    desc289.putDouble( idjustificationLetterDesired, 0.000000 );
                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                    desc289.putDouble( idjustificationLetterMaximum, 0.000000 );
                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                    desc289.putDouble( idjustificationGlyphMinimum, 1.000000 );
                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                    desc289.putDouble( idjustificationGlyphDesired, 1.000000 );
                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                    desc289.putDouble( idjustificationGlyphMaximum, 1.000000 );
                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idJstA = charIDToTypeID( "JstA" );
                    desc289.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                    desc289.putBoolean( idhangingRoman, false );
                    var idautoTCY = stringIDToTypeID( "autoTCY" );
                    desc289.putInteger( idautoTCY, 1 );
                    var idkeepTogether = stringIDToTypeID( "keepTogether" );
                    desc289.putBoolean( idkeepTogether, true );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                    desc289.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpushIn = stringIDToTypeID( "pushIn" );
                    desc289.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                    desc289.putBoolean( idkurikaeshiMojiShori, false );
                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                    desc289.putBoolean( idtextEveryLineComposer, false );
                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                    desc289.putDouble( iddefaultTabWidth, 36.000000 );
                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                        var desc290 = new ActionDescriptor();
                        var idClr = charIDToTypeID( "Clr " );
                            var desc291 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc291.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc290.putObject( idClr, idGrsc, desc291 );
                        var idstrokeColor = stringIDToTypeID( "strokeColor" );
                            var desc292 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc292.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc290.putObject( idstrokeColor, idGrsc, desc292 );
                        var idFl = charIDToTypeID( "Fl  " );
                        desc290.putBoolean( idFl, true );
                        var idStrk = charIDToTypeID( "Strk" );
                        desc290.putBoolean( idStrk, false );
                    var idTxtS = charIDToTypeID( "TxtS" );
                    desc289.putObject( iddefaultStyle, idTxtS, desc290 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                desc288.putObject( idparagraphStyle, idparagraphStyle, desc289 );
            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            list55.putObject( idparagraphStyleRange, desc288 );
        desc278.putList( idparagraphStyleRange, list55 );
        var idkerningRange = stringIDToTypeID( "kerningRange" );
            var list56 = new ActionList();
        desc278.putList( idkerningRange, list56 );
    var idTxLr = charIDToTypeID( "TxLr" );
    desc277.putObject( idUsng, idTxLr, desc278 );
executeAction( idMk, desc277, DialogModes.NO );

// =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc293 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref131 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idfsel = charIDToTypeID( "fsel" );
        ref131.putProperty( idChnl, idfsel );
    desc293.putReference( idnull, ref131 );
    var idT = charIDToTypeID( "T   " );
    var idOrdn = charIDToTypeID( "Ordn" );
    var idNone = charIDToTypeID( "None" );
    desc293.putEnumerated( idT, idOrdn, idNone );
executeAction( idsetd, desc293, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc294 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref132 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idChnl = charIDToTypeID( "Chnl" );
        var idBlck = charIDToTypeID( "Blck" );
        ref132.putEnumerated( idChnl, idChnl, idBlck );
    desc294.putReference( idnull, ref132 );
executeAction( idslct, desc294, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc295 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref133 = new ActionReference();
        var idtypeCreateOrEditTool = stringIDToTypeID( "typeCreateOrEditTool" );
        ref133.putClass( idtypeCreateOrEditTool );
    desc295.putReference( idnull, ref133 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc295.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc295.putBoolean( idforceNotify, true );
executeAction( idslct, desc295, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc296 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref134 = new ActionReference();
        var idmarqueeRectTool = stringIDToTypeID( "marqueeRectTool" );
        ref134.putClass( idmarqueeRectTool );
    desc296.putReference( idnull, ref134 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc296.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc296.putBoolean( idforceNotify, true );
executeAction( idslct, desc296, DialogModes.NO );

// =======================================================
var idMk = charIDToTypeID( "Mk  " );
    var desc297 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref135 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        ref135.putClass( idTxLr );
    desc297.putReference( idnull, ref135 );
    var idUsng = charIDToTypeID( "Usng" );
        var desc298 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc298.putString( idTxt, "BLACK -"  + app.activeDocument.name );
        var idwarp = stringIDToTypeID( "warp" );
            var desc299 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc299.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc299.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc299.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc299.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc299.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc298.putObject( idwarp, idwarp, desc299 );
        var idTxtC = charIDToTypeID( "TxtC" );
            var desc300 = new ActionDescriptor();
            var idHrzn = charIDToTypeID( "Hrzn" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc300.putUnitDouble( idHrzn, idPrc, 1.760176 );
            var idVrtc = charIDToTypeID( "Vrtc" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc300.putUnitDouble( idVrtc, idPrc, 0.806452 );
        var idPnt = charIDToTypeID( "Pnt " );
        desc298.putObject( idTxtC, idPnt, desc300 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc298.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc298.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );
        desc298.putEnumerated( idAntA, idAnnt, idantiAliasSharp );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list57 = new ActionList();
                var desc301 = new ActionDescriptor();
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idPnt = charIDToTypeID( "Pnt " );
                desc301.putEnumerated( idTEXT, idTEXT, idPnt );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc301.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc302 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc302.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc302.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc302.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc302.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc302.putDouble( idtx, 0.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc302.putDouble( idty, 0.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc301.putObject( idTrnf, idTrnf, desc302 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc301.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc301.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc301.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc301.putUnitDouble( idrowGutter, idPnt, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc301.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc301.putUnitDouble( idSpcn, idPnt, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc301.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc301.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );
                var idbase = stringIDToTypeID( "base" );
                    var desc303 = new ActionDescriptor();
                    var idHrzn = charIDToTypeID( "Hrzn" );
                    desc303.putDouble( idHrzn, 0.000000 );
                    var idVrtc = charIDToTypeID( "Vrtc" );
                    desc303.putDouble( idVrtc, 0.000000 );
                var idPnt = charIDToTypeID( "Pnt " );
                desc301.putObject( idbase, idPnt, desc303 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list57.putObject( idtextShape, desc301 );
        desc298.putList( idtextShape, list57 );
        var idTxtt = charIDToTypeID( "Txtt" );
            var list58 = new ActionList();
                var desc304 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc304.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc304.putInteger( idT, 15 );
                var idTxtS = charIDToTypeID( "TxtS" );
                    var desc305 = new ActionDescriptor();
                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                    desc305.putString( idfontPostScriptName, "MyriadPro-Regular" );
                    var idFntN = charIDToTypeID( "FntN" );
                    desc305.putString( idFntN, "Myriad Pro" );
                    var idFntS = charIDToTypeID( "FntS" );
                    desc305.putString( idFntS, "Regular" );
                    var idScrp = charIDToTypeID( "Scrp" );
                    desc305.putInteger( idScrp, 0 );
                    var idFntT = charIDToTypeID( "FntT" );
                    desc305.putInteger( idFntT, 0 );
                    var idSz = charIDToTypeID( "Sz  " );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc305.putUnitDouble( idSz, idPnt, 7.999999 );
                    var idHrzS = charIDToTypeID( "HrzS" );
                    desc305.putDouble( idHrzS, 100.000000 );
                    var idVrtS = charIDToTypeID( "VrtS" );
                    desc305.putDouble( idVrtS, 100.000000 );
                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                    desc305.putBoolean( idsyntheticBold, false );
                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                    desc305.putBoolean( idsyntheticItalic, false );
                    var idautoLeading = stringIDToTypeID( "autoLeading" );
                    desc305.putBoolean( idautoLeading, true );
                    var idTrck = charIDToTypeID( "Trck" );
                    desc305.putInteger( idTrck, 0 );
                    var idBsln = charIDToTypeID( "Bsln" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc305.putUnitDouble( idBsln, idPnt, 0.000000 );
                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                    desc305.putDouble( idcharacterRotation, 0.000000 );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idmanual = stringIDToTypeID( "manual" );
                    desc305.putEnumerated( idAtKr, idAtKr, idmanual );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc305.putEnumerated( idfontCaps, idfontCaps, idNrml );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc305.putEnumerated( idbaseline, idbaseline, idNrml );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc305.putEnumerated( idotbaseline, idotbaseline, idNrml );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                    desc305.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idunderlineOff = stringIDToTypeID( "underlineOff" );
                    desc305.putEnumerated( idUndl, idUndl, idunderlineOff );
                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc305.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                    var idligature = stringIDToTypeID( "ligature" );
                    desc305.putBoolean( idligature, true );
                    var idaltligature = stringIDToTypeID( "altligature" );
                    desc305.putBoolean( idaltligature, false );
                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                    desc305.putBoolean( idcontextualLigatures, true );
                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                    desc305.putBoolean( idalternateLigatures, false );
                    var idoldStyle = stringIDToTypeID( "oldStyle" );
                    desc305.putBoolean( idoldStyle, false );
                    var idfractions = stringIDToTypeID( "fractions" );
                    desc305.putBoolean( idfractions, false );
                    var idordinals = stringIDToTypeID( "ordinals" );
                    desc305.putBoolean( idordinals, false );
                    var idswash = stringIDToTypeID( "swash" );
                    desc305.putBoolean( idswash, false );
                    var idtitling = stringIDToTypeID( "titling" );
                    desc305.putBoolean( idtitling, false );
                    var idconnectionForms = stringIDToTypeID( "connectionForms" );
                    desc305.putBoolean( idconnectionForms, true );
                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                    desc305.putBoolean( idstylisticAlternates, false );
                    var idornaments = stringIDToTypeID( "ornaments" );
                    desc305.putBoolean( idornaments, false );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc305.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                    desc305.putBoolean( idproportionalMetrics, false );
                    var idkana = stringIDToTypeID( "kana" );
                    desc305.putBoolean( idkana, false );
                    var iditalics = stringIDToTypeID( "italics" );
                    desc305.putBoolean( iditalics, false );
                    var idruby = stringIDToTypeID( "ruby" );
                    desc305.putBoolean( idruby, false );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idwithStream = stringIDToTypeID( "withStream" );
                    desc305.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                    desc305.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var iddefaultForm = stringIDToTypeID( "defaultForm" );
                    desc305.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                    var idmojiZume = stringIDToTypeID( "mojiZume" );
                    desc305.putDouble( idmojiZume, 0.000000 );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idroman = stringIDToTypeID( "roman" );
                    desc305.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                    desc305.putBoolean( idenableWariChu, false );
                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                    desc305.putInteger( idwariChuCount, 2 );
                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                    desc305.putInteger( idwariChuLineGap, 0 );
                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                    desc305.putDouble( idwariChuScale, 0.500000 );
                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                    desc305.putInteger( idwariChuWidow, 2 );
                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                    desc305.putInteger( idwariChuOrphan, 2 );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                    desc305.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                    desc305.putInteger( idtcyUpDown, 0 );
                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                    desc305.putInteger( idtcyLeftRight, 0 );
                    var idleftAki = stringIDToTypeID( "leftAki" );
                    desc305.putDouble( idleftAki, -1.000000 );
                    var idrightAki = stringIDToTypeID( "rightAki" );
                    desc305.putDouble( idrightAki, -1.000000 );
                    var idjiDori = stringIDToTypeID( "jiDori" );
                    desc305.putInteger( idjiDori, 0 );
                    var idnoBreak = stringIDToTypeID( "noBreak" );
                    desc305.putBoolean( idnoBreak, false );
                    var idClr = charIDToTypeID( "Clr " );
                        var desc306 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc306.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc305.putObject( idClr, idGrsc, desc306 );
                    var idstrokeColor = stringIDToTypeID( "strokeColor" );
                        var desc307 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc307.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc305.putObject( idstrokeColor, idGrsc, desc307 );
                    var idFl = charIDToTypeID( "Fl  " );
                    desc305.putBoolean( idFl, true );
                    var idStrk = charIDToTypeID( "Strk" );
                    desc305.putBoolean( idStrk, false );
                    var idfillFirst = stringIDToTypeID( "fillFirst" );
                    desc305.putBoolean( idfillFirst, false );
                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                    desc305.putBoolean( idfillOverPrint, false );
                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                    desc305.putBoolean( idstrokeOverPrint, false );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idbuttCap = stringIDToTypeID( "buttCap" );
                    desc305.putEnumerated( idlineCap, idlineCap, idbuttCap );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idmiterJoin = stringIDToTypeID( "miterJoin" );
                    desc305.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                    var idlineWidth = stringIDToTypeID( "lineWidth" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc305.putUnitDouble( idlineWidth, idPnt, 0.010000 );
                    var idmiterLimit = stringIDToTypeID( "miterLimit" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc305.putUnitDouble( idmiterLimit, idPnt, 0.010000 );
                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                    desc305.putDouble( idlineDashoffset, 0.000000 );
                var idTxtS = charIDToTypeID( "TxtS" );
                desc304.putObject( idTxtS, idTxtS, desc305 );
            var idTxtt = charIDToTypeID( "Txtt" );
            list58.putObject( idTxtt, desc304 );
        desc298.putList( idTxtt, list58 );
        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            var list59 = new ActionList();
                var desc308 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc308.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc308.putInteger( idT, 15 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                    var desc309 = new ActionDescriptor();
                    var idAlgn = charIDToTypeID( "Algn" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idLeft = charIDToTypeID( "Left" );
                    desc309.putEnumerated( idAlgn, idAlg, idLeft );
                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc309.putUnitDouble( idfirstLineIndent, idPnt, 0.000000 );
                    var idstartIndent = stringIDToTypeID( "startIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc309.putUnitDouble( idstartIndent, idPnt, 0.000000 );
                    var idendIndent = stringIDToTypeID( "endIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc309.putUnitDouble( idendIndent, idPnt, 0.000000 );
                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc309.putUnitDouble( idspaceBefore, idPnt, 0.000000 );
                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc309.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                    desc309.putInteger( iddropCapMultiplier, 1 );
                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                    desc309.putDouble( idautoLeadingPercentage, 1.200000 );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                    desc309.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                    var idhyphenate = stringIDToTypeID( "hyphenate" );
                    desc309.putBoolean( idhyphenate, true );
                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                    desc309.putInteger( idhyphenateWordSize, 6 );
                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                    desc309.putInteger( idhyphenatePreLength, 2 );
                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                    desc309.putInteger( idhyphenatePostLength, 2 );
                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                    desc309.putInteger( idhyphenateLimit, 0 );
                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                    desc309.putDouble( idhyphenationZone, 36.000000 );
                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                    desc309.putBoolean( idhyphenateCapitalized, true );
                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                    desc309.putDouble( idhyphenationPreference, 0.500000 );
                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                    desc309.putDouble( idjustificationWordMinimum, 0.800000 );
                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                    desc309.putDouble( idjustificationWordDesired, 1.000000 );
                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                    desc309.putDouble( idjustificationWordMaximum, 1.330000 );
                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                    desc309.putDouble( idjustificationLetterMinimum, 0.000000 );
                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                    desc309.putDouble( idjustificationLetterDesired, 0.000000 );
                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                    desc309.putDouble( idjustificationLetterMaximum, 0.000000 );
                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                    desc309.putDouble( idjustificationGlyphMinimum, 1.000000 );
                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                    desc309.putDouble( idjustificationGlyphDesired, 1.000000 );
                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                    desc309.putDouble( idjustificationGlyphMaximum, 1.000000 );
                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idJstA = charIDToTypeID( "JstA" );
                    desc309.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                    desc309.putBoolean( idhangingRoman, false );
                    var idautoTCY = stringIDToTypeID( "autoTCY" );
                    desc309.putInteger( idautoTCY, 1 );
                    var idkeepTogether = stringIDToTypeID( "keepTogether" );
                    desc309.putBoolean( idkeepTogether, true );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                    desc309.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpushIn = stringIDToTypeID( "pushIn" );
                    desc309.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                    desc309.putBoolean( idkurikaeshiMojiShori, false );
                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                    desc309.putBoolean( idtextEveryLineComposer, false );
                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                    desc309.putDouble( iddefaultTabWidth, 36.000000 );
                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                        var desc310 = new ActionDescriptor();
                        var idClr = charIDToTypeID( "Clr " );
                            var desc311 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc311.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc310.putObject( idClr, idGrsc, desc311 );
                        var idstrokeColor = stringIDToTypeID( "strokeColor" );
                            var desc312 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc312.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc310.putObject( idstrokeColor, idGrsc, desc312 );
                        var idFl = charIDToTypeID( "Fl  " );
                        desc310.putBoolean( idFl, true );
                        var idStrk = charIDToTypeID( "Strk" );
                        desc310.putBoolean( idStrk, false );
                    var idTxtS = charIDToTypeID( "TxtS" );
                    desc309.putObject( iddefaultStyle, idTxtS, desc310 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                desc308.putObject( idparagraphStyle, idparagraphStyle, desc309 );
            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            list59.putObject( idparagraphStyleRange, desc308 );
        desc298.putList( idparagraphStyleRange, list59 );
        var idkerningRange = stringIDToTypeID( "kerningRange" );
            var list60 = new ActionList();
        desc298.putList( idkerningRange, list60 );
    var idTxLr = charIDToTypeID( "TxLr" );
    desc297.putObject( idUsng, idTxLr, desc298 );
executeAction( idMk, desc297, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc313 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref136 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        ref136.putName( idChnl, "ADHESIVE" );
    desc313.putReference( idnull, ref136 );
executeAction( idslct, desc313, DialogModes.NO );

// =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc314 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref137 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idfsel = charIDToTypeID( "fsel" );
        ref137.putProperty( idChnl, idfsel );
    desc314.putReference( idnull, ref137 );
    var idT = charIDToTypeID( "T   " );
    var idOrdn = charIDToTypeID( "Ordn" );
    var idNone = charIDToTypeID( "None" );
    desc314.putEnumerated( idT, idOrdn, idNone );
executeAction( idsetd, desc314, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc315 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref138 = new ActionReference();
        var idtypeCreateOrEditTool = stringIDToTypeID( "typeCreateOrEditTool" );
        ref138.putClass( idtypeCreateOrEditTool );
    desc315.putReference( idnull, ref138 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc315.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc315.putBoolean( idforceNotify, true );
executeAction( idslct, desc315, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc316 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref139 = new ActionReference();
        var idmarqueeRectTool = stringIDToTypeID( "marqueeRectTool" );
        ref139.putClass( idmarqueeRectTool );
    desc316.putReference( idnull, ref139 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc316.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc316.putBoolean( idforceNotify, true );
executeAction( idslct, desc316, DialogModes.NO );

// =======================================================
var idMk = charIDToTypeID( "Mk  " );
    var desc317 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref140 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        ref140.putClass( idTxLr );
    desc317.putReference( idnull, ref140 );
    var idUsng = charIDToTypeID( "Usng" );
        var desc318 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc318.putString( idTxt, "ADHESIVE -" + app.activeDocument.name );
        var idwarp = stringIDToTypeID( "warp" );
            var desc319 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc319.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc319.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc319.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc319.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc319.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc318.putObject( idwarp, idwarp, desc319 );
        var idTxtC = charIDToTypeID( "TxtC" );
            var desc320 = new ActionDescriptor();
            var idHrzn = charIDToTypeID( "Hrzn" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc320.putUnitDouble( idHrzn, idPrc, 1.980198 );
            var idVrtc = charIDToTypeID( "Vrtc" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc320.putUnitDouble( idVrtc, idPrc, 0.806452 );
        var idPnt = charIDToTypeID( "Pnt " );
        desc318.putObject( idTxtC, idPnt, desc320 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc318.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc318.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );
        desc318.putEnumerated( idAntA, idAnnt, idantiAliasSharp );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list61 = new ActionList();
                var desc321 = new ActionDescriptor();
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idPnt = charIDToTypeID( "Pnt " );
                desc321.putEnumerated( idTEXT, idTEXT, idPnt );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc321.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc322 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc322.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc322.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc322.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc322.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc322.putDouble( idtx, 0.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc322.putDouble( idty, 0.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc321.putObject( idTrnf, idTrnf, desc322 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc321.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc321.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc321.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc321.putUnitDouble( idrowGutter, idPnt, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc321.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc321.putUnitDouble( idSpcn, idPnt, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc321.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc321.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );
                var idbase = stringIDToTypeID( "base" );
                    var desc323 = new ActionDescriptor();
                    var idHrzn = charIDToTypeID( "Hrzn" );
                    desc323.putDouble( idHrzn, 0.000000 );
                    var idVrtc = charIDToTypeID( "Vrtc" );
                    desc323.putDouble( idVrtc, 0.000000 );
                var idPnt = charIDToTypeID( "Pnt " );
                desc321.putObject( idbase, idPnt, desc323 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list61.putObject( idtextShape, desc321 );
        desc318.putList( idtextShape, list61 );
        var idTxtt = charIDToTypeID( "Txtt" );
            var list62 = new ActionList();
                var desc324 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc324.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc324.putInteger( idT, 18 );
                var idTxtS = charIDToTypeID( "TxtS" );
                    var desc325 = new ActionDescriptor();
                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                    desc325.putString( idfontPostScriptName, "MyriadPro-Regular" );
                    var idFntN = charIDToTypeID( "FntN" );
                    desc325.putString( idFntN, "Myriad Pro" );
                    var idFntS = charIDToTypeID( "FntS" );
                    desc325.putString( idFntS, "Regular" );
                    var idScrp = charIDToTypeID( "Scrp" );
                    desc325.putInteger( idScrp, 0 );
                    var idFntT = charIDToTypeID( "FntT" );
                    desc325.putInteger( idFntT, 0 );
                    var idSz = charIDToTypeID( "Sz  " );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc325.putUnitDouble( idSz, idPnt, 7.999999 );
                    var idHrzS = charIDToTypeID( "HrzS" );
                    desc325.putDouble( idHrzS, 100.000000 );
                    var idVrtS = charIDToTypeID( "VrtS" );
                    desc325.putDouble( idVrtS, 100.000000 );
                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                    desc325.putBoolean( idsyntheticBold, false );
                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                    desc325.putBoolean( idsyntheticItalic, false );
                    var idautoLeading = stringIDToTypeID( "autoLeading" );
                    desc325.putBoolean( idautoLeading, true );
                    var idTrck = charIDToTypeID( "Trck" );
                    desc325.putInteger( idTrck, 0 );
                    var idBsln = charIDToTypeID( "Bsln" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc325.putUnitDouble( idBsln, idPnt, 0.000000 );
                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                    desc325.putDouble( idcharacterRotation, 0.000000 );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idmanual = stringIDToTypeID( "manual" );
                    desc325.putEnumerated( idAtKr, idAtKr, idmanual );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc325.putEnumerated( idfontCaps, idfontCaps, idNrml );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc325.putEnumerated( idbaseline, idbaseline, idNrml );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc325.putEnumerated( idotbaseline, idotbaseline, idNrml );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                    desc325.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idunderlineOff = stringIDToTypeID( "underlineOff" );
                    desc325.putEnumerated( idUndl, idUndl, idunderlineOff );
                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc325.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                    var idligature = stringIDToTypeID( "ligature" );
                    desc325.putBoolean( idligature, true );
                    var idaltligature = stringIDToTypeID( "altligature" );
                    desc325.putBoolean( idaltligature, false );
                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                    desc325.putBoolean( idcontextualLigatures, true );
                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                    desc325.putBoolean( idalternateLigatures, false );
                    var idoldStyle = stringIDToTypeID( "oldStyle" );
                    desc325.putBoolean( idoldStyle, false );
                    var idfractions = stringIDToTypeID( "fractions" );
                    desc325.putBoolean( idfractions, false );
                    var idordinals = stringIDToTypeID( "ordinals" );
                    desc325.putBoolean( idordinals, false );
                    var idswash = stringIDToTypeID( "swash" );
                    desc325.putBoolean( idswash, false );
                    var idtitling = stringIDToTypeID( "titling" );
                    desc325.putBoolean( idtitling, false );
                    var idconnectionForms = stringIDToTypeID( "connectionForms" );
                    desc325.putBoolean( idconnectionForms, true );
                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                    desc325.putBoolean( idstylisticAlternates, false );
                    var idornaments = stringIDToTypeID( "ornaments" );
                    desc325.putBoolean( idornaments, false );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc325.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                    desc325.putBoolean( idproportionalMetrics, false );
                    var idkana = stringIDToTypeID( "kana" );
                    desc325.putBoolean( idkana, false );
                    var iditalics = stringIDToTypeID( "italics" );
                    desc325.putBoolean( iditalics, false );
                    var idruby = stringIDToTypeID( "ruby" );
                    desc325.putBoolean( idruby, false );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idwithStream = stringIDToTypeID( "withStream" );
                    desc325.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                    desc325.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var iddefaultForm = stringIDToTypeID( "defaultForm" );
                    desc325.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                    var idmojiZume = stringIDToTypeID( "mojiZume" );
                    desc325.putDouble( idmojiZume, 0.000000 );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idroman = stringIDToTypeID( "roman" );
                    desc325.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                    desc325.putBoolean( idenableWariChu, false );
                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                    desc325.putInteger( idwariChuCount, 2 );
                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                    desc325.putInteger( idwariChuLineGap, 0 );
                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                    desc325.putDouble( idwariChuScale, 0.500000 );
                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                    desc325.putInteger( idwariChuWidow, 2 );
                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                    desc325.putInteger( idwariChuOrphan, 2 );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                    desc325.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                    desc325.putInteger( idtcyUpDown, 0 );
                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                    desc325.putInteger( idtcyLeftRight, 0 );
                    var idleftAki = stringIDToTypeID( "leftAki" );
                    desc325.putDouble( idleftAki, -1.000000 );
                    var idrightAki = stringIDToTypeID( "rightAki" );
                    desc325.putDouble( idrightAki, -1.000000 );
                    var idjiDori = stringIDToTypeID( "jiDori" );
                    desc325.putInteger( idjiDori, 0 );
                    var idnoBreak = stringIDToTypeID( "noBreak" );
                    desc325.putBoolean( idnoBreak, false );
                    var idClr = charIDToTypeID( "Clr " );
                        var desc326 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc326.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc325.putObject( idClr, idGrsc, desc326 );
                    var idstrokeColor = stringIDToTypeID( "strokeColor" );
                        var desc327 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc327.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc325.putObject( idstrokeColor, idGrsc, desc327 );
                    var idFl = charIDToTypeID( "Fl  " );
                    desc325.putBoolean( idFl, true );
                    var idStrk = charIDToTypeID( "Strk" );
                    desc325.putBoolean( idStrk, false );
                    var idfillFirst = stringIDToTypeID( "fillFirst" );
                    desc325.putBoolean( idfillFirst, false );
                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                    desc325.putBoolean( idfillOverPrint, false );
                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                    desc325.putBoolean( idstrokeOverPrint, false );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idbuttCap = stringIDToTypeID( "buttCap" );
                    desc325.putEnumerated( idlineCap, idlineCap, idbuttCap );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idmiterJoin = stringIDToTypeID( "miterJoin" );
                    desc325.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                    var idlineWidth = stringIDToTypeID( "lineWidth" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc325.putUnitDouble( idlineWidth, idPnt, 0.010000 );
                    var idmiterLimit = stringIDToTypeID( "miterLimit" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc325.putUnitDouble( idmiterLimit, idPnt, 0.010000 );
                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                    desc325.putDouble( idlineDashoffset, 0.000000 );
                var idTxtS = charIDToTypeID( "TxtS" );
                desc324.putObject( idTxtS, idTxtS, desc325 );
            var idTxtt = charIDToTypeID( "Txtt" );
            list62.putObject( idTxtt, desc324 );
        desc318.putList( idTxtt, list62 );
        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            var list63 = new ActionList();
                var desc328 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc328.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc328.putInteger( idT, 18 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                    var desc329 = new ActionDescriptor();
                    var idAlgn = charIDToTypeID( "Algn" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idLeft = charIDToTypeID( "Left" );
                    desc329.putEnumerated( idAlgn, idAlg, idLeft );
                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc329.putUnitDouble( idfirstLineIndent, idPnt, 0.000000 );
                    var idstartIndent = stringIDToTypeID( "startIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc329.putUnitDouble( idstartIndent, idPnt, 0.000000 );
                    var idendIndent = stringIDToTypeID( "endIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc329.putUnitDouble( idendIndent, idPnt, 0.000000 );
                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc329.putUnitDouble( idspaceBefore, idPnt, 0.000000 );
                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc329.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                    desc329.putInteger( iddropCapMultiplier, 1 );
                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                    desc329.putDouble( idautoLeadingPercentage, 1.200000 );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                    desc329.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                    var idhyphenate = stringIDToTypeID( "hyphenate" );
                    desc329.putBoolean( idhyphenate, true );
                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                    desc329.putInteger( idhyphenateWordSize, 6 );
                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                    desc329.putInteger( idhyphenatePreLength, 2 );
                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                    desc329.putInteger( idhyphenatePostLength, 2 );
                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                    desc329.putInteger( idhyphenateLimit, 0 );
                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                    desc329.putDouble( idhyphenationZone, 36.000000 );
                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                    desc329.putBoolean( idhyphenateCapitalized, true );
                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                    desc329.putDouble( idhyphenationPreference, 0.500000 );
                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                    desc329.putDouble( idjustificationWordMinimum, 0.800000 );
                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                    desc329.putDouble( idjustificationWordDesired, 1.000000 );
                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                    desc329.putDouble( idjustificationWordMaximum, 1.330000 );
                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                    desc329.putDouble( idjustificationLetterMinimum, 0.000000 );
                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                    desc329.putDouble( idjustificationLetterDesired, 0.000000 );
                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                    desc329.putDouble( idjustificationLetterMaximum, 0.000000 );
                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                    desc329.putDouble( idjustificationGlyphMinimum, 1.000000 );
                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                    desc329.putDouble( idjustificationGlyphDesired, 1.000000 );
                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                    desc329.putDouble( idjustificationGlyphMaximum, 1.000000 );
                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idJstA = charIDToTypeID( "JstA" );
                    desc329.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                    desc329.putBoolean( idhangingRoman, false );
                    var idautoTCY = stringIDToTypeID( "autoTCY" );
                    desc329.putInteger( idautoTCY, 1 );
                    var idkeepTogether = stringIDToTypeID( "keepTogether" );
                    desc329.putBoolean( idkeepTogether, true );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                    desc329.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpushIn = stringIDToTypeID( "pushIn" );
                    desc329.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                    desc329.putBoolean( idkurikaeshiMojiShori, false );
                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                    desc329.putBoolean( idtextEveryLineComposer, false );
                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                    desc329.putDouble( iddefaultTabWidth, 36.000000 );
                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                        var desc330 = new ActionDescriptor();
                        var idClr = charIDToTypeID( "Clr " );
                            var desc331 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc331.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc330.putObject( idClr, idGrsc, desc331 );
                        var idstrokeColor = stringIDToTypeID( "strokeColor" );
                            var desc332 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc332.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc330.putObject( idstrokeColor, idGrsc, desc332 );
                        var idFl = charIDToTypeID( "Fl  " );
                        desc330.putBoolean( idFl, true );
                        var idStrk = charIDToTypeID( "Strk" );
                        desc330.putBoolean( idStrk, false );
                    var idTxtS = charIDToTypeID( "TxtS" );
                    desc329.putObject( iddefaultStyle, idTxtS, desc330 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                desc328.putObject( idparagraphStyle, idparagraphStyle, desc329 );
            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            list63.putObject( idparagraphStyleRange, desc328 );
        desc318.putList( idparagraphStyleRange, list63 );
        var idkerningRange = stringIDToTypeID( "kerningRange" );
            var list64 = new ActionList();
        desc318.putList( idkerningRange, list64 );
    var idTxLr = charIDToTypeID( "TxLr" );
    desc317.putObject( idUsng, idTxLr, desc318 );
executeAction( idMk, desc317, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc333 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref141 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        ref141.putName( idChnl, "WHITE" );
    desc333.putReference( idnull, ref141 );
executeAction( idslct, desc333, DialogModes.NO );

// =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc334 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref142 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idfsel = charIDToTypeID( "fsel" );
        ref142.putProperty( idChnl, idfsel );
    desc334.putReference( idnull, ref142 );
    var idT = charIDToTypeID( "T   " );
    var idOrdn = charIDToTypeID( "Ordn" );
    var idNone = charIDToTypeID( "None" );
    desc334.putEnumerated( idT, idOrdn, idNone );
executeAction( idsetd, desc334, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc335 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref143 = new ActionReference();
        var idtypeCreateOrEditTool = stringIDToTypeID( "typeCreateOrEditTool" );
        ref143.putClass( idtypeCreateOrEditTool );
    desc335.putReference( idnull, ref143 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc335.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc335.putBoolean( idforceNotify, true );
executeAction( idslct, desc335, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc336 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref144 = new ActionReference();
        var idmarqueeRectTool = stringIDToTypeID( "marqueeRectTool" );
        ref144.putClass( idmarqueeRectTool );
    desc336.putReference( idnull, ref144 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc336.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc336.putBoolean( idforceNotify, true );
executeAction( idslct, desc336, DialogModes.NO );

// =======================================================
var idMk = charIDToTypeID( "Mk  " );
    var desc337 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref145 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        ref145.putClass( idTxLr );
    desc337.putReference( idnull, ref145 );
    var idUsng = charIDToTypeID( "Usng" );
        var desc338 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc338.putString( idTxt, "WHITE -" + app.activeDocument.name );
        var idwarp = stringIDToTypeID( "warp" );
            var desc339 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc339.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc339.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc339.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc339.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc339.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc338.putObject( idwarp, idwarp, desc339 );
        var idTxtC = charIDToTypeID( "TxtC" );
            var desc340 = new ActionDescriptor();
            var idHrzn = charIDToTypeID( "Hrzn" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc340.putUnitDouble( idHrzn, idPrc, 1.870187 );
            var idVrtc = charIDToTypeID( "Vrtc" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc340.putUnitDouble( idVrtc, idPrc, 0.705645 );
        var idPnt = charIDToTypeID( "Pnt " );
        desc338.putObject( idTxtC, idPnt, desc340 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc338.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc338.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );
        desc338.putEnumerated( idAntA, idAnnt, idantiAliasSharp );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list65 = new ActionList();
                var desc341 = new ActionDescriptor();
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idPnt = charIDToTypeID( "Pnt " );
                desc341.putEnumerated( idTEXT, idTEXT, idPnt );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc341.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc342 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc342.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc342.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc342.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc342.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc342.putDouble( idtx, 0.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc342.putDouble( idty, 0.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc341.putObject( idTrnf, idTrnf, desc342 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc341.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc341.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc341.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc341.putUnitDouble( idrowGutter, idPnt, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc341.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc341.putUnitDouble( idSpcn, idPnt, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc341.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPnt = charIDToTypeID( "#Pnt" );
                desc341.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );
                var idbase = stringIDToTypeID( "base" );
                    var desc343 = new ActionDescriptor();
                    var idHrzn = charIDToTypeID( "Hrzn" );
                    desc343.putDouble( idHrzn, 0.000000 );
                    var idVrtc = charIDToTypeID( "Vrtc" );
                    desc343.putDouble( idVrtc, 0.000000 );
                var idPnt = charIDToTypeID( "Pnt " );
                desc341.putObject( idbase, idPnt, desc343 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list65.putObject( idtextShape, desc341 );
        desc338.putList( idtextShape, list65 );
        var idTxtt = charIDToTypeID( "Txtt" );
            var list66 = new ActionList();
                var desc344 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc344.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc344.putInteger( idT, 15 );
                var idTxtS = charIDToTypeID( "TxtS" );
                    var desc345 = new ActionDescriptor();
                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                    desc345.putString( idfontPostScriptName, "MyriadPro-Regular" );
                    var idFntN = charIDToTypeID( "FntN" );
                    desc345.putString( idFntN, "Myriad Pro" );
                    var idFntS = charIDToTypeID( "FntS" );
                    desc345.putString( idFntS, "Regular" );
                    var idScrp = charIDToTypeID( "Scrp" );
                    desc345.putInteger( idScrp, 0 );
                    var idFntT = charIDToTypeID( "FntT" );
                    desc345.putInteger( idFntT, 0 );
                    var idSz = charIDToTypeID( "Sz  " );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc345.putUnitDouble( idSz, idPnt, 7.999999 );
                    var idHrzS = charIDToTypeID( "HrzS" );
                    desc345.putDouble( idHrzS, 100.000000 );
                    var idVrtS = charIDToTypeID( "VrtS" );
                    desc345.putDouble( idVrtS, 100.000000 );
                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                    desc345.putBoolean( idsyntheticBold, false );
                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                    desc345.putBoolean( idsyntheticItalic, false );
                    var idautoLeading = stringIDToTypeID( "autoLeading" );
                    desc345.putBoolean( idautoLeading, true );
                    var idTrck = charIDToTypeID( "Trck" );
                    desc345.putInteger( idTrck, 0 );
                    var idBsln = charIDToTypeID( "Bsln" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc345.putUnitDouble( idBsln, idPnt, 0.000000 );
                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                    desc345.putDouble( idcharacterRotation, 0.000000 );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idAtKr = charIDToTypeID( "AtKr" );
                    var idmanual = stringIDToTypeID( "manual" );
                    desc345.putEnumerated( idAtKr, idAtKr, idmanual );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idfontCaps = stringIDToTypeID( "fontCaps" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc345.putEnumerated( idfontCaps, idfontCaps, idNrml );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idbaseline = stringIDToTypeID( "baseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc345.putEnumerated( idbaseline, idbaseline, idNrml );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idotbaseline = stringIDToTypeID( "otbaseline" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc345.putEnumerated( idotbaseline, idotbaseline, idNrml );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethrough = stringIDToTypeID( "strikethrough" );
                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                    desc345.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idUndl = charIDToTypeID( "Undl" );
                    var idunderlineOff = stringIDToTypeID( "underlineOff" );
                    desc345.putEnumerated( idUndl, idUndl, idunderlineOff );
                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc345.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );
                    var idligature = stringIDToTypeID( "ligature" );
                    desc345.putBoolean( idligature, true );
                    var idaltligature = stringIDToTypeID( "altligature" );
                    desc345.putBoolean( idaltligature, false );
                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                    desc345.putBoolean( idcontextualLigatures, true );
                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                    desc345.putBoolean( idalternateLigatures, false );
                    var idoldStyle = stringIDToTypeID( "oldStyle" );
                    desc345.putBoolean( idoldStyle, false );
                    var idfractions = stringIDToTypeID( "fractions" );
                    desc345.putBoolean( idfractions, false );
                    var idordinals = stringIDToTypeID( "ordinals" );
                    desc345.putBoolean( idordinals, false );
                    var idswash = stringIDToTypeID( "swash" );
                    desc345.putBoolean( idswash, false );
                    var idtitling = stringIDToTypeID( "titling" );
                    desc345.putBoolean( idtitling, false );
                    var idconnectionForms = stringIDToTypeID( "connectionForms" );
                    desc345.putBoolean( idconnectionForms, true );
                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                    desc345.putBoolean( idstylisticAlternates, false );
                    var idornaments = stringIDToTypeID( "ornaments" );
                    desc345.putBoolean( idornaments, false );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idfigureStyle = stringIDToTypeID( "figureStyle" );
                    var idNrml = charIDToTypeID( "Nrml" );
                    desc345.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                    desc345.putBoolean( idproportionalMetrics, false );
                    var idkana = stringIDToTypeID( "kana" );
                    desc345.putBoolean( idkana, false );
                    var iditalics = stringIDToTypeID( "italics" );
                    desc345.putBoolean( iditalics, false );
                    var idruby = stringIDToTypeID( "ruby" );
                    desc345.putBoolean( idruby, false );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                    var idwithStream = stringIDToTypeID( "withStream" );
                    desc345.putEnumerated( idbaselineDirection, idbaselineDirection, idwithStream );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idtextLanguage = stringIDToTypeID( "textLanguage" );
                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                    desc345.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                    var iddefaultForm = stringIDToTypeID( "defaultForm" );
                    desc345.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                    var idmojiZume = stringIDToTypeID( "mojiZume" );
                    desc345.putDouble( idmojiZume, 0.000000 );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                    var idroman = stringIDToTypeID( "roman" );
                    desc345.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                    desc345.putBoolean( idenableWariChu, false );
                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                    desc345.putInteger( idwariChuCount, 2 );
                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                    desc345.putInteger( idwariChuLineGap, 0 );
                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                    desc345.putDouble( idwariChuScale, 0.500000 );
                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                    desc345.putInteger( idwariChuWidow, 2 );
                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                    desc345.putInteger( idwariChuOrphan, 2 );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                    desc345.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                    desc345.putInteger( idtcyUpDown, 0 );
                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                    desc345.putInteger( idtcyLeftRight, 0 );
                    var idleftAki = stringIDToTypeID( "leftAki" );
                    desc345.putDouble( idleftAki, -1.000000 );
                    var idrightAki = stringIDToTypeID( "rightAki" );
                    desc345.putDouble( idrightAki, -1.000000 );
                    var idjiDori = stringIDToTypeID( "jiDori" );
                    desc345.putInteger( idjiDori, 0 );
                    var idnoBreak = stringIDToTypeID( "noBreak" );
                    desc345.putBoolean( idnoBreak, false );
                    var idClr = charIDToTypeID( "Clr " );
                        var desc346 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc346.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc345.putObject( idClr, idGrsc, desc346 );
                    var idstrokeColor = stringIDToTypeID( "strokeColor" );
                        var desc347 = new ActionDescriptor();
                        var idGry = charIDToTypeID( "Gry " );
                        desc347.putDouble( idGry, 60.780001 );
                    var idGrsc = charIDToTypeID( "Grsc" );
                    desc345.putObject( idstrokeColor, idGrsc, desc347 );
                    var idFl = charIDToTypeID( "Fl  " );
                    desc345.putBoolean( idFl, true );
                    var idStrk = charIDToTypeID( "Strk" );
                    desc345.putBoolean( idStrk, false );
                    var idfillFirst = stringIDToTypeID( "fillFirst" );
                    desc345.putBoolean( idfillFirst, false );
                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                    desc345.putBoolean( idfillOverPrint, false );
                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                    desc345.putBoolean( idstrokeOverPrint, false );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idlineCap = stringIDToTypeID( "lineCap" );
                    var idbuttCap = stringIDToTypeID( "buttCap" );
                    desc345.putEnumerated( idlineCap, idlineCap, idbuttCap );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idlineJoin = stringIDToTypeID( "lineJoin" );
                    var idmiterJoin = stringIDToTypeID( "miterJoin" );
                    desc345.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                    var idlineWidth = stringIDToTypeID( "lineWidth" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc345.putUnitDouble( idlineWidth, idPnt, 0.010000 );
                    var idmiterLimit = stringIDToTypeID( "miterLimit" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc345.putUnitDouble( idmiterLimit, idPnt, 0.010000 );
                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                    desc345.putDouble( idlineDashoffset, 0.000000 );
                var idTxtS = charIDToTypeID( "TxtS" );
                desc344.putObject( idTxtS, idTxtS, desc345 );
            var idTxtt = charIDToTypeID( "Txtt" );
            list66.putObject( idTxtt, desc344 );
        desc338.putList( idTxtt, list66 );
        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            var list67 = new ActionList();
                var desc348 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc348.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc348.putInteger( idT, 15 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                    var desc349 = new ActionDescriptor();
                    var idAlgn = charIDToTypeID( "Algn" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idLeft = charIDToTypeID( "Left" );
                    desc349.putEnumerated( idAlgn, idAlg, idLeft );
                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc349.putUnitDouble( idfirstLineIndent, idPnt, 0.000000 );
                    var idstartIndent = stringIDToTypeID( "startIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc349.putUnitDouble( idstartIndent, idPnt, 0.000000 );
                    var idendIndent = stringIDToTypeID( "endIndent" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc349.putUnitDouble( idendIndent, idPnt, 0.000000 );
                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc349.putUnitDouble( idspaceBefore, idPnt, 0.000000 );
                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );
                    var idPnt = charIDToTypeID( "#Pnt" );
                    desc349.putUnitDouble( idspaceAfter, idPnt, 0.000000 );
                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );
                    desc349.putInteger( iddropCapMultiplier, 1 );
                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );
                    desc349.putDouble( idautoLeadingPercentage, 1.200000 );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingType = stringIDToTypeID( "leadingType" );
                    var idleadingBelow = stringIDToTypeID( "leadingBelow" );
                    desc349.putEnumerated( idleadingType, idleadingType, idleadingBelow );
                    var idhyphenate = stringIDToTypeID( "hyphenate" );
                    desc349.putBoolean( idhyphenate, true );
                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );
                    desc349.putInteger( idhyphenateWordSize, 6 );
                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );
                    desc349.putInteger( idhyphenatePreLength, 2 );
                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );
                    desc349.putInteger( idhyphenatePostLength, 2 );
                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );
                    desc349.putInteger( idhyphenateLimit, 0 );
                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );
                    desc349.putDouble( idhyphenationZone, 36.000000 );
                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );
                    desc349.putBoolean( idhyphenateCapitalized, true );
                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );
                    desc349.putDouble( idhyphenationPreference, 0.500000 );
                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );
                    desc349.putDouble( idjustificationWordMinimum, 0.800000 );
                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );
                    desc349.putDouble( idjustificationWordDesired, 1.000000 );
                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );
                    desc349.putDouble( idjustificationWordMaximum, 1.330000 );
                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );
                    desc349.putDouble( idjustificationLetterMinimum, 0.000000 );
                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );
                    desc349.putDouble( idjustificationLetterDesired, 0.000000 );
                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );
                    desc349.putDouble( idjustificationLetterMaximum, 0.000000 );
                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );
                    desc349.putDouble( idjustificationGlyphMinimum, 1.000000 );
                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );
                    desc349.putDouble( idjustificationGlyphDesired, 1.000000 );
                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );
                    desc349.putDouble( idjustificationGlyphMaximum, 1.000000 );
                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );
                    var idAlg = charIDToTypeID( "Alg " );
                    var idJstA = charIDToTypeID( "JstA" );
                    desc349.putEnumerated( idsingleWordJustification, idAlg, idJstA );
                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );
                    desc349.putBoolean( idhangingRoman, false );
                    var idautoTCY = stringIDToTypeID( "autoTCY" );
                    desc349.putInteger( idautoTCY, 1 );
                    var idkeepTogether = stringIDToTypeID( "keepTogether" );
                    desc349.putBoolean( idkeepTogether, true );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagari = stringIDToTypeID( "burasagari" );
                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );
                    desc349.putEnumerated( idburasagari, idburasagari, idburasagariNone );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );
                    var idpushIn = stringIDToTypeID( "pushIn" );
                    desc349.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );
                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );
                    desc349.putBoolean( idkurikaeshiMojiShori, false );
                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );
                    desc349.putBoolean( idtextEveryLineComposer, false );
                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );
                    desc349.putDouble( iddefaultTabWidth, 36.000000 );
                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );
                        var desc350 = new ActionDescriptor();
                        var idClr = charIDToTypeID( "Clr " );
                            var desc351 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc351.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc350.putObject( idClr, idGrsc, desc351 );
                        var idstrokeColor = stringIDToTypeID( "strokeColor" );
                            var desc352 = new ActionDescriptor();
                            var idGry = charIDToTypeID( "Gry " );
                            desc352.putDouble( idGry, 60.780001 );
                        var idGrsc = charIDToTypeID( "Grsc" );
                        desc350.putObject( idstrokeColor, idGrsc, desc352 );
                        var idFl = charIDToTypeID( "Fl  " );
                        desc350.putBoolean( idFl, true );
                        var idStrk = charIDToTypeID( "Strk" );
                        desc350.putBoolean( idStrk, false );
                    var idTxtS = charIDToTypeID( "TxtS" );
                    desc349.putObject( iddefaultStyle, idTxtS, desc350 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                desc348.putObject( idparagraphStyle, idparagraphStyle, desc349 );
            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            list67.putObject( idparagraphStyleRange, desc348 );
        desc338.putList( idparagraphStyleRange, list67 );
        var idkerningRange = stringIDToTypeID( "kerningRange" );
            var list68 = new ActionList();
        desc338.putList( idkerningRange, list68 );
    var idTxLr = charIDToTypeID( "TxLr" );
    desc337.putObject( idUsng, idTxLr, desc338 );
executeAction( idMk, desc337, DialogModes.NO );

// =======================================================
var idsetd = charIDToTypeID( "setd" );
    var desc353 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref146 = new ActionReference();
        var idChnl = charIDToTypeID( "Chnl" );
        var idfsel = charIDToTypeID( "fsel" );
        ref146.putProperty( idChnl, idfsel );
    desc353.putReference( idnull, ref146 );
    var idT = charIDToTypeID( "T   " );
    var idOrdn = charIDToTypeID( "Ordn" );
    var idNone = charIDToTypeID( "None" );
    desc353.putEnumerated( idT, idOrdn, idNone );
executeAction( idsetd, desc353, DialogModes.NO );
}
